//
//  $Id: eint3ISR.c 158 2008-10-17 01:31:32Z jcw $
//  $Revision: 158 $
//  $Author: jcw $
//  $Date: 2008-10-16 21:31:32 -0400 (Thu, 16 Oct 2008) $
//  $HeadURL: http://tinymicros.com/svn_public/arm/lpc2148_demo/trunk/eints/eint3ISR.c $
//

#include "FreeRTOS.h"

#include "eint3ISR.h"
#include "logging.h"
#include "meas_sm.h"


//int count=0;
//
//
//
static void eint3ISR_Handler (void)
{
  //LUK SCB_EXTINT |= SCB_EXTINT_EINT3;
  
  /**
  if(flowrate_interrupt)
    incrementFlowCount();
    updateMeasure_timestamp();
    update slog_entry_item -> power
           cdaylog_entry_item -> flowvolume, sum of day
  */
  /* flowmeter interrupt */
//  vTaskDelay(1 / portTICK_RATE_MS);
  if((VIC_IRQStatus & VIC_IRQStatus_EINT3) && ((GPIO0_FIOPIN & GPIO_IO_P30)==0)) { 
    incr_SumFlowvolume(); /* summing up over the day(slog_entry_item) and all the time(clog_entry_item) */
    incr_FlowCount(); /* to calculate power every 5min interrupt */
  }
  SCB_EXTINT |= SCB_EXTINT_EINT3; //LUK

  // Do something
//  if(count == 5) {
//    GPIO0_FIOPIN ^= (1<<11); // toggle led2
//    debug_printf("zalööö");
//  }
//  count = (count+1)%100;
  VIC_VectAddr = (unsigned portLONG) 0;
}

//void eint3ISR (void) __attribute__ ((naked));
void eint3ISR (void)
{
  portSAVE_CONTEXT ();
  eint3ISR_Handler ();
  portRESTORE_CONTEXT ();
}
